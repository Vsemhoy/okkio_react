import { createSlice } from '@reduxjs/toolkit';

// =============================
// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
// =============================

const PRIORITIES = [
  {
    id: 1,
    name: '–Ω–µ—Ç', // –ö—Ä–∞—Ç–∫–æ–µ –∏–º—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è API)
    title: '–±–µ–∑ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞', // –ü–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ (–¥–ª—è UI)
    icon: 'üí§',    // –ò–∫–æ–Ω–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —ç–º–æ–¥–∑–∏ –∏–ª–∏ SVG)
    color: '#8c8c8c' // –°–µ—Ä—ã–π
  },
  {
    id: 2,
    name: '–Ω–µ —Å—Ä–æ—á–Ω',
    title: '–Ω–µ —Å—Ä–æ—á–Ω–æ',
    icon: 'üí≠',
    color: '#595959' // –¢–µ–º–Ω–æ-—Å–µ—Ä—ã–π
  },
  {
    id: 3,
    name: '–æ—á–µ—Ä–µ–¥—å',
    title: '–≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤ –ø–æ—Ä—è–¥–∫–µ –æ—á–µ—Ä–µ–¥–∏',
    icon: '‚åö',
    color: '#1890ff' // –°–∏–Ω–∏–π
  },
  {
    id: 4,
    name: '–≤—ã—Å–æ–∫–∏–π',
    title: '–≤—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç',
    icon: 'üí£',
    color: '#faad14' // –û—Ä–∞–Ω–∂–µ–≤—ã–π
  },
  {
    id: 5,
    name: '—É–ª—å—Ç—Ä–∞',
    title: '–Ω–∞–∏–≤—ã—Å—à–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç',
    icon: 'üö®',
    color: '#ff4d4f' // –ö—Ä–∞—Å–Ω—ã–π
  }
];

const STATUSES = [
  {
    id: 1,
    name: '–°–æ–∑–¥–∞—ë—Ç—Å—è',
    title: '–°–æ–∑–¥–∞—ë—Ç—Å—è', // –î—É–±–ª–∏—Ä—É–µ—Ç—Å—è, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –ø–æ–∑–∂–µ —Ä–∞–∑–Ω–µ—Å—Ç–∏
    icon: '',
    color: '',
    sort_order: 0,
    is_for_task: 1,
    is_for_request: 1,
    hidden: 0
  },
  {
    id: 2,
    name: '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞',
    title: '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞',
    icon: '',
    color: '',
    sort_order: 0,
    is_for_task: 0,
    is_for_request: 1,
    hidden: 0
  },
  {
    id: 3,
    name: '–í –æ—á–µ—Ä–µ–¥–∏',
    title: '–í –æ—á–µ—Ä–µ–¥–∏',
    icon: '',
    color: '',
    sort_order: 0,
    is_for_task: 1,
    is_for_request: 1,
    hidden: 0
  },
  {
    id: 4,
    name: '–†–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç—Å—è',
    title: '–†–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç—Å—è',
    icon: '',
    color: '',
    sort_order: 0,
    is_for_task: 0,
    is_for_request: 1,
    hidden: 0
  },
  {
    id: 5,
    name: '–í —Ä–∞–±–æ—Ç–µ',
    title: '–í —Ä–∞–±–æ—Ç–µ',
    icon: '',
    color: '',
    sort_order: 0,
    is_for_task: 1,
    is_for_request: 1,
    hidden: 0
  },
  {
    id: 6,
    name: '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ',
    title: '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ',
    icon: '',
    color: '',
    sort_order: 0,
    is_for_task: 1,
    is_for_request: 1,
    hidden: 0
  },
  {
    id: 7,
    name: '–ù–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ',
    title: '–ù–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ',
    icon: '',
    color: '',
    sort_order: 0,
    is_for_task: 1,
    is_for_request: 1,
    hidden: 0
  },
  {
    id: 8,
    name: '–û—Ç–∫–ª–æ–Ω–µ–Ω–æ',
    title: '–û—Ç–∫–ª–æ–Ω–µ–Ω–æ',
    icon: '',
    color: '',
    sort_order: 0,
    is_for_task: 1,
    is_for_request: 1,
    hidden: 0
  },
  {
    id: 9,
    name: '–ó–∞–≤–µ—Ä—à–µ–Ω–æ',
    title: '–ó–∞–≤–µ—Ä—à–µ–Ω–æ',
    icon: '',
    color: '',
    sort_order: 0,
    is_for_task: 1,
    is_for_request: 1,
    hidden: 0
  }
];

const VISIBLE_RULES = [
    {
        id: 0,
        title: '–î–ª—è –≤—Å–µ—Ö'
    },
    {
        id: -1,
        title: '–¢–æ–ª—å–∫–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∫–∏–∫–∞–º'
    },
        {
        id: -2,
        title: '–¢–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—é'
    },
    {
        id: -3,
        title: '–¢–æ–ª—å–∫–æ –æ—Ç–¥–µ–ª —Å–æ–∑–¥–∞—Ç–µ–ª—è'
    },
        {
        id: -4,
        title: '–ò –ø–æ–¥—á–∏–Ω–µ–Ω–Ω—ã–º —Å–æ–∑–¥–∞—Ç–µ–ª—è'
    }
];

const CLAIM_TYPES = [
  {
    id: 1,
    name: 'Bug',
    text: 'found bug',
    icon: '',
    color: ''
  }
];

const DOCUMENT_TYPES = [
  {
    id: 1,
    name: '–ü–∞–º—è—Ç–∫–∞',
    sort_order: 0,
    icon: '',
    color: ''
  }
];

const RESOURCE_TYPES = [
  {
    id: 1,
    name: 'Link',
    sort_order: 0,
    title: '–í–Ω–µ—à–Ω—è—è —Å—Å—ã–ª–∫–∞',
    icon: '',
    color: ''
  }
];

// =============================
// –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
// =============================
const initialState = {
  priorities: PRIORITIES,
  statuses: STATUSES,
  claimTypes: CLAIM_TYPES,
  documentTypes: DOCUMENT_TYPES,
  resourceTypes: RESOURCE_TYPES,
  visibleRules: VISIBLE_RULES,
};

// =============================
// Slice
// =============================
const optionsSlice = createSlice({
  name: 'options',
  initialState,
  reducers: {
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –æ–ø—Ü–∏–π
    setOptions: (state, action) => ({
      ...state,
      ...action.payload
    }),

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –æ–ø—Ü–∏–π
    setPriorities: (state, action) => {
      state.priorities = action.payload;
    },
    setStatuses: (state, action) => {
      state.statuses = action.payload;
    },
    setClaimTypes: (state, action) => {
      state.claimTypes = action.payload;
    },
    setDocumentTypes: (state, action) => {
      state.documentTypes = action.payload;
    },
    setResourceTypes: (state, action) => {
      state.resourceTypes = action.payload;
    }
  }
});

// =============================
// –≠–∫—Å–ø–æ—Ä—Ç –¥–µ–π—Å—Ç–≤–∏–π –∏ —Ä–µ–¥—å—é—Å–µ—Ä–∞
// =============================
export const {
  setOptions,
  setPriorities,
  setStatuses,
  setClaimTypes,
  setDocumentTypes,
  setResourceTypes
} = optionsSlice.actions;

export default optionsSlice.reducer;